<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.autocar.member.dao.MemberDao">
	<select id="count" resultType="int">
		SELECT count(*) FROM member
	</select>

	<select id="getPage" resultType="MemberVO">
		SELECT member_id, blog_id, name, email,
		phone, reg_date
		FROM(
		SELECT ROW_NUMBER() OVER (ORDER BY reg_date DESC) AS SEQ,
		member_id, blog_id, name, email, phone, reg_date
		FROM MEMBER
		)
		WHERE SEQ BETWEEN #{start} AND #{end}
		ORDER BY reg_date DESC
	</select>

	<select id="findById" parameterType="String"
		resultType="MemberVO">
		SELECT * from member
		WHERE member_id=#{memberId}
	</select>

	<insert id="insert" useGeneratedKeys="true" keyColumn="member_id" keyProperty="memberId">
		INSERT INTO member
		(
			MEMBER_ID,
			PASSWORD,
			NAME,
			ADMIN,
			ADDRESS,
			PHONE,
			EMAIL,
			SALT,
			BLOG_ID,
			AVATA,
			REG_DATE,
			UPDATE_DATE
		)
		values
		(
			#{memberId}, #{password}, #{name}, 
			#{admin}, #{address}, #{phone}, 
			#{email}, #{salt}, #{blogId}, #{avata, jdbcType=BLOB},
			sysdate, sysdate
		)
	</insert>

	<update id="update" parameterType="MemberVO">
		UPDATE member SET
		<if test=" avata != null and avata != ''"> avata = #{avata, jdbcType=BLOB}, </if>
		email = #{email},
		phone = #{phone},
		address = #{address}
		WHERE member_id=#{memberId}
	</update>

	<delete id="delete">
		DELETE FROM member
		WHERE member_id=#{memberId}
	</delete>
	
	<delete id="deleteBlog">
		DELETE FROM BLOG WHERE BLOG_ID = #{ blogId }
	</delete>
	
	<delete id="deletePost">
		DELETE FROM POST WHERE BLOG_ID = #{ blogId }
	</delete>
	
	<delete id="deleteCmt">
		DELETE FROM COMMENTS WHERE BLOG_ID = #{ blogId }
	</delete>
	
	
	<update id="updateByAdmin" parameterType="MemberVO">
		UPDATE member SET
			admin = #{admin},
			<if test=" avata != null and avata != ''"> avata = #{avata, jdbcType=BLOB},</if>
			email = #{email},
			phone = #{phone},
			address = #{address}
		WHERE member_id=#{memberId}
	</update>
</mapper>
